{"version":3,"sources":["Components/Statistics/Statistics.js","Components/Feedback/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","bad","neutral","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","Section","title","children","Notification","message","App","state","e","name","target","textContent","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAceA,EAbI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,+BACE,wCAAWJ,KACX,2CAAcE,KACd,uCAAUD,KACV,yCAAYE,EAAZ,OACA,2CAAcC,EAAd,aCKOC,EAbS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,6BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,6BACE,wBAAQC,QAASH,EAAjB,SAAmCE,KAD5BA,WCKJE,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCCQC,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,4BAAIA,OCCaC,E,4MACnBC,MAAQ,CACNjB,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPM,gBAAkB,SAAAW,GAChB,IAAMC,EAAOD,EAAEE,OAAOC,YACtB,EAAKC,UAAS,SAAAC,GAAS,sBACpBJ,EAAOI,EAAUJ,GAAQ,O,EAI9BK,mBAAqB,kBACnB,EAAKP,MAAMjB,KAAO,EAAKiB,MAAMf,QAAU,EAAKe,MAAMhB,K,EAEpDwB,gCAAkC,kBAChCC,KAAKC,MAAO,IAAM,EAAKV,MAAMjB,KAAQ,EAAKwB,uB,4CAE5C,WACE,MAA+BI,KAAKX,MAA5BjB,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,IACvB,OACE,gCACE,cAAC,EAAD,CAASW,MAAM,wBAAf,SACE,cAAC,EAAD,CACEN,QAASuB,OAAOC,KAAKF,KAAKX,OAC1BV,gBAAiBqB,KAAKrB,oBAG1B,cAAC,EAAD,CAASK,MAAM,aAAf,SACGgB,KAAKJ,qBACJ,cAAC,EAAD,CACExB,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOyB,KAAKJ,qBACZpB,mBAAoBwB,KAAKH,oCAG3B,cAAC,EAAD,CAAcV,QAAQ,+B,GAxCDgB,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a8d1ddd2.chunk.js","sourcesContent":["import React from 'react';\r\nconst Statistics = ({ good, bad, neutral, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>good: {good}</li>\r\n        <li>neutral: {neutral}</li>\r\n        <li>bad: {bad}</li>\r\n        <li>total: {total} </li>\r\n        <li>percent: {positivePercentage}%</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {options.map(option => (\r\n          <li key={option}>\r\n            <button onClick={onLeaveFeedback}>{option}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <p>{message}</p>\r\n  </>\r\n);\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './Components/Statistics/Statistics';\nimport FeedbackOptions from './Components/Feedback/FeedbackOptions';\nimport Section from './Components/Section/Section';\nimport Notification from './Components/Notification/Notification';\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const name = e.target.textContent;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((100 * this.state.good) / this.countTotalFeedback());\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}